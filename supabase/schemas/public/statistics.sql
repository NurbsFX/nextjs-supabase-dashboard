----------------------------------------------------------------
--                                                            --
--                     public.statistics                      --
--                                                            --
----------------------------------------------------------------

drop function if exists set_statistics;

drop table if exists statistics;

----------------------------------------------------------------

-- Create a table
create table statistics (
  id bigint generated by default as identity primary key,
  created_at timestamptz default now() not null,
  user_id uuid references users(id) on delete cascade,
  visitor_id uuid not null,
  title text,
  location text,
  path text,
  referrer text,
  ip inet,
  browser jsonb,
  user_agent text
);

-- Add table indexing
create index statistics_user_id_idx on statistics (user_id);
create index statistics_visitor_id_idx on statistics (visitor_id);
create index statistics_path_idx on statistics (path);

-- Secure the table
alter table statistics enable row level security;

-- Add row-level security
create policy "Public access for all users" on statistics for select to authenticated, anon using ( true );
create policy "User can insert statistics" on statistics for insert to authenticated with check ( true );
create policy "User can update statistics" on statistics for update to authenticated using ( true );
create policy "User can delete statistics" on statistics for delete to authenticated using ( true );

----------------------------------------------------------------

create or replace function set_statistics(data json)
returns void
security definer set search_path = public
as $$
begin
  insert into statistics
  (user_id,visitor_id,title,location,path,referrer,ip,browser,user_agent)
  values
  (
    (data ->> 'user_id')::uuid,
    (data ->> 'visitor_id')::uuid,
    (data ->> 'title')::text,
    (data ->> 'location')::text,
    (data ->> 'path')::text,
    (data ->> 'referrer')::text,
    (data ->> 'ip')::inet,
    (data ->> 'browser')::jsonb,
    (data ->> 'user_agent')::text
  );
end;
$$ language plpgsql;
